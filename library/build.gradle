plugins {
    id "com.android.library"
    id "maven-publish"
}

ext {
    customVersionCode = 1
    customVersionName = '1.0.0'
    customGroupId = 'com.ikecin.sdk'
    customArtifactId = 'jni' // 必须保证artifactId唯一，AndroidManifest中的package值也要唯一，建议跟artifactID保持一致
}

android {
    compileSdkVersion 30
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode customVersionCode
        versionName customVersionName
        consumerProguardFiles 'consumer-proguard-rules.pro'
        ndk {
            moduleName "Demo"
        }
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'consumer-proguard-rules.pro'
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            zipAlignEnabled true
        }
        debug {
            minifyEnabled false
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            zipAlignEnabled false
        }
    }
    buildFeatures {
        dataBinding false
        viewBinding true
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.1'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.sourceFiles
    archiveClassifier.set("sources")
}

task javadoc(type: Javadoc) {
    failOnError false
    options.encoding 'UTF-8'
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    exclude '**/BuildConfig.java', '**/R.java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}
/**使用命令 gradlew publish 即可发布到本地maven*/
afterEvaluate {
    publishing {
        publications {
            lib(MavenPublication) {
                from components.release
                groupId customGroupId
                artifactId customArtifactId
                version customVersionName
                artifact sourcesJar
                artifact javadocJar
            }
        }
        repositories {
            maven {
                url = "$buildDir/repo"
            }
        }
    }
}